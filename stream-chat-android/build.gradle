import com.getstream.sdk.chat.Dependencies
import com.getstream.sdk.chat.Configuration

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

ext {
    PUBLISH_GROUP_ID = Configuration.artifactGroup
    PUBLISH_VERSION = Configuration.versionName
    PUBLISH_ARTIFACT_ID = 'stream-chat-android'
}

apply from: "${rootDir}/scripts/publish-module.gradle"

android {
    compileSdkVersion Configuration.compileSdkVersion

    defaultConfig {
        minSdkVersion Configuration.minSdkVersion
        targetSdkVersion Configuration.targetSdkVersion
        versionName Configuration.versionName

        vectorDrawables.useSupportLibrary = true
    }

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }

    File signFile = rootProject.file('.sign/keystore.properties')
    if (signFile.exists()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(signFile))
        signingConfigs {
            release {
                storeFile rootProject.file(properties['keystore'])
                storePassword properties['storePassword']
                keyAlias properties['keyAlias']
                keyPassword properties['keyPassword']
            }
        }
    } else {
        signingConfigs {
            release {
                storeFile rootProject.file('.sign/debug.keystore')
                storePassword 'android'
                keyAlias 'androiddebugkey'
                keyPassword 'android'
            }
        }
    }

    signingConfigs.debug {
        storeFile rootProject.file('.sign/debug.keystore')
        storePassword 'android'
        keyAlias 'androiddebugkey'
        keyPassword 'android'
    }

    resourcePrefix 'stream_'

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
            // Show the result of every unit test, even if it passes.
            all {
                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                }
            }
        }
    }

    sourceSets {
        all {
            it.java.srcDir "src/$it.name/kotlin"
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += [
                '-progressive',
                '-Xopt-in=io.getstream.chat.android.core.internal.InternalStreamChatApi'
        ]
    }
}

dependencies {
    api project(":stream-chat-android-ui-common")

    implementation Dependencies.kotlinStdLib
    implementation Dependencies.androidxActivityKtx
    implementation Dependencies.androidxAppCompat
    implementation Dependencies.androidLegacySupport
    implementation Dependencies.androidxLifecycleExtensions
    implementation Dependencies.androidxLifecycleViewModelKtx
    implementation Dependencies.androidxMedia
    implementation Dependencies.constraintLayout
    implementation Dependencies.androidxFragmentKtx
    api Dependencies.androidxRecyclerview

    implementation Dependencies.drawabletoolbox
    implementation Dependencies.keyboardVisibilityEvent
    implementation Dependencies.stfalconImageViewer

    implementation Dependencies.markwonCore
    implementation Dependencies.markwonLinkify
    implementation Dependencies.markwonextStrikethrough
    implementation Dependencies.markwonImage

    // Tests
    testImplementation project(":stream-chat-android-test")

    testImplementation Dependencies.junitJupiterApi
    testImplementation Dependencies.junitJupiterParams
    testRuntimeOnly Dependencies.junitJupiterEngine

    testImplementation Dependencies.truth
    testImplementation Dependencies.mockito
    testImplementation Dependencies.mockitoKotlin
    testImplementation Dependencies.androidxArchCoreTest
    testImplementation Dependencies.kluent
}
